Spring AspectJ
--------------
1) Create a New Java Project in Eclipse - AspectJ

2) Create a New Package : co.edureka

3) Convert to Maven Project
Right click on Project > Configure > Convert To Maven Project
Group ID : co.edureka
Artifact ID : Aspectj

Add Dependencies to pom.xml

mvnrepository.com
Dependencies > Springframework [context, aspects]

pom.xml

<dependencies>
  <dependency>	
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>5.3.0.RELEASE</version>
  </dependency>
  <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-aspects</artifactId>
    <version>5.3.0.RELEASE</version>
  </dependency>  	
</dependencies>
<build>

4) Create Bean Class

package co.edureka;
public class Bank{
 public void deposit() {	 
   System.out.println("Generic Deposit method....");
 }
 public void deposit(String acno, float amt) {
   System.out.println("Rs."+amt+" credited in A/C:"+acno);
 }
}

5) Create a New class - Logger
package co.edureka;
class Logger{
 public void log(){
  System.out.println("LOG: Going to deposit amount");
 }
}

6) Create a Spring Bean Configuration file - context.xml

include aop namespace

xmlns:aop="http://www.springframework.org/schema/aop"

> create beans for co.edureka.Bank & co.edureka.Logger
	<bean id="bank" class="co.edureka.Bank" />
	<bean id="logger" class="co.edureka.Logger" />

> aop (tab) > beans > right click and click on "Insert <aop:config> element"

> config > right click > insert aop:pointcut   id : bankpoint expression : execution(void co.edureka.Bank.deposit(..))

> config > right click > insert aop:aspect  id: loggeraspect	ref=logger

> aspect > right click > insert aop:before element ::  pointcut-ref: bankpoint	method: log


<bean id="bank" class="co.edureka.Bank" />
<bean id="logger" class="co.edureka.Logger" />

<aop:config>
  <aop:pointcut expression="execution(void co.edureka.Bank.deposit(..))" id="bankpoint" />
    <aop:aspect id="loggeraspect" ref="log">
       <aop:before method="log" pointcut-ref="bankpoint" />
    </aop:aspect>
</aop:config>

OR

<aop:config>
  <aop:aspect ref="logger" id="loggeraspect">
     <aop:before method="log" pointcut="execution(void co.edureka.Bank.deposit())" />
  </aop:aspect>
</aop:config>


OR

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

		<bean id="bank" class="co.edureka.Bank"/>
		<bean id="logger" class="co.edureka.Logger"/>		
		
		<aop:config>
			<aop:pointcut id="bankpoint" expression="execution(void co.edureka.Bank.deposit(..))"/>
			
			<aop:aspect id="loggeraspect" ref="logger">
				<aop:before method="log" pointcut-ref="bankpoint" />
				<aop:after method="logCompletion" pointcut-ref="bankpoint" />
			</aop:aspect>
		</aop:config>
</beans>


Main.java
---------
package co.edureka;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Main 
{
 public static void main(String[] args) 
 {
  ApplicationContext context=new ClassPathXmlApplicationContext("context.xml");
  Banking bank = (Banking)context.getBean("bank");
  bank.deposit();
  bank.deposit("SBIN123456",75000.0);
 }
}




