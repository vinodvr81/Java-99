Spring - Hibernate
------------------
Project Dependencies
- spring-context
- spring-jdbc
- spring-orm
- mysql-connector
- hibernate-entitymanager
etc


1) Database Table
 emp - DB table in MySQL
  - empno , ename, sal (fields)

2) Entity class 
 Employee.java - POJO class

package co.edureka.ems.entity;
public class Employee 
{
	private int empno;
	private String ename;
	private float sal;

	public Employee() {
	}

	public Employee(int empno, String ename, float sal) {
		this.empno = empno;
		this.ename = ename;
		this.sal = sal;
	}

	public int getEmpno() {
		return empno;
	}

	public void setEmpno(int empno) {
		this.empno = empno;
	}

	public String getEname() {
		return ename;
	}

	public void setEname(String ename) {
		this.ename = ename;
	}

	public float getSal() {
		return sal;
	}

	public void setSal(float sal) {
		this.sal = sal;
	}

	@Override
	public String toString() {
		return "Employee [" + empno + " | " + ename + " | " + sal + "]";
	}
}


3) Hibernate Mapping File- src/main/resources/employee.hbm.xml

<?xml version="1.0" encoding="UTF-8"?>
      
<hibernate-mapping>  
 <class name="co.edureka.entity.Employee" table="emp">  
  <id name="empno" column="empno">  
   <generator class="assigned"/>
  </id>                
  <property name="ename" column="ename"/>
  <property name="sal" column="sal"/>
 </class>                
</hibernate-mapping>  

4) Spring Bean Configuration File -  src/main/resources/ems-orm-beans.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">
             
 <context:annotation-config/>
 
 <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
  <property name="url" value="jdbc:mysql://localhost:3306/db_edureka"/>
  <property name="username" value="root"/>
  <property name="password" value="root"/>
 </bean>
    
 <bean id="mysessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">  
    <property name="dataSource" ref="ds"/>
    <property name="mappingResources">  
     <list>  
       <value>employee.hbm.xml</value>  
     </list>  
    </property>  
            
    <property name="hibernateProperties">  
     <props>  
      <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop>  
      <prop key="hibernate.hbm2ddl.auto">update</prop>  
      <prop key="hibernate.show_sql">true</prop>  
     </props>  
    </property>  
</bean>  
          
<bean id="template" class="org.springframework.orm.hibernate5.HibernateTemplate">  
    <property name="sessionFactory" ref="mysessionFactory"></property>  
</bean>  
         
<bean id="empdao" class="co.edureka.ems.dao.EmployeeDao">  
    <property name="template" ref="template"></property>  
</bean>  


<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"> 
    <property name="sessionFactory" ref="mysessionFactory"/> 
</bean>

<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>  


EmployeeDao.java
----------------
package co.edureka.ems.dao
import java.util.ArrayList;
import java.util.List;

import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.transaction.annotation.Transactional;

public class EmployeeDao
{
private HibernateTemplate session;

public HibernateTemplate getTemplate() {
	return session;
}

public void setTemplate(HibernateTemplate template) {
	this.session = template;
}

@Transactional(readOnly = false)
public void saveEmployee(Employee emp){  
    session.save(emp);  
}  

@Transactional(readOnly = false)
public void updateEmployee(Employee emp){  
    session.update(emp);  
}  

@Transactional(readOnly = false)
public void deleteEmployee(Employee e){  
    session.delete(e);  
}  

public Employee getById(int id){  
    Employee emp = (Employee)session.get(Employee.class,id);  
    return emp;  
}  

public List<Employee> getEmployees(){  
    List<Employee> list=new ArrayList<Employee>();  
    list = session.loadAll(Employee.class);  
    return list;  
}  
}



Main.java

import java.util.List;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Main
{
public static void main(String[] args) 
{
ApplicationContext context=new ClassPathXmlApplicationContext("ems-orm-beans.xml");

EmployeeDao dao=(EmployeeDao)context.getBean("empdao");

Employee e=new Employee(101,"Shilpa",4567);
dao.saveEmployee(e);



e=(Employee)dao.getById(103);
System.out.println(e);
e.setName("Shilpa Sreekumar");
e.setSalary(3333);
dao.updateEmployee(e);

/*
Employee e=(Employee)dao.getById(103);
System.out.println(e);
dao.deleteEmployee(e);
*/


List<Employee> emps=dao.getEmployees();
for(int i=0;i<emps.size();i++){
	e=emps.get(i);
	System.out.println(e);
}

}
}


Project Dependencies
- spring-context
- spring-jdbc
- spring-orm
- mysql-connector
- hibernate-core
- hibernate-entitymanager
etc
